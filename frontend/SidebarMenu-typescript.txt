"use client";

import React, { useState, useEffect } from "react";

const SidebarMenu = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => {
    setIsOpen((prev) => !prev);
  };

  useEffect(() => {
    const body = document.body;

    if (isOpen) {
      const scrollbarWidth =
        window.innerWidth - document.documentElement.clientWidth;

      body.style.overflow = "hidden"; // Disable body scroll
      body.style.marginRight = `${scrollbarWidth}px`; // Prevent layout shift
    } else {
      body.style.overflow = ""; // Re-enable body scroll
      body.style.marginRight = ""; // Reset margin-right
    }

    // Cleanup on component unmount
    return () => {
      body.style.overflow = "";
      body.style.marginRight = "";
    };
  }, [isOpen]);

  return (
    <div className="relative">
      {/* SidebarMenu */}
      <div
        id="sidebar"
        className={`fixed top-0 left-0 z-20 h-full w-[85%] sm:w-[600px] bg-slate-950 text-gray-200  ${
          isOpen ? "translate-x-0 duration-300 sm:duration-500 transform" : "-translate-x-full duration-300 transform"
        }`}
      >
        {/* <div>
          <div className="p-4 flex justify-between items-center">
            <h2 className="text-lg font-semibold">Menu</h2>
            <button
              onClick={toggleMenu}
              className="text-gray-200 hover:text-gray-300"
              aria-label="Close Menu"
            ></button>
          </div>
          <ul className="p-4">
            <li className="mb-4">Menu Item 1</li>
            <li className="mb-4">Menu Item 2</li>
            <li className="mb-4">Menu Item 3</li>
          </ul>
        </div> */}
      </div>

      {/* Open/Close Button */}
      <button
        onClick={toggleMenu}
        aria-label={isOpen ? "Close menu" : "Open menu"}
        className="text-slate-950 px-4 py-2 rounded-md flex items-center gap-2 h-fit"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          className="h-6 w-6 dark:text-gray-200"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth={2.5}
            d="M4 6h16M4 12h16m-7 6h7"
          />
        </svg>
      </button>

      {/* Overlay */}
      <div
        className={`fixed inset-0 bg-black/80 backdrop-blur-sm z-10 transition-opacity duration-200 ${
          isOpen ? "opacity-100 " : "opacity-0 pointer-events-none"
        }`}
        onClick={toggleMenu}
        aria-hidden="true"
      ></div>
    </div>
  );
};

export default SidebarMenu;
